#!/bin/bash
# Pre-commit hook for Meditationstimer
# Runs tests automatically when committing changes to Services/ directory
#
# Installation:
#   ln -s ../../.github/hooks/pre-commit .git/hooks/pre-commit
#   chmod +x .github/hooks/pre-commit

set -e

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Pre-commit hook: Checking for Services/ changes..."

# Get list of files being committed
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Check if any files in Services/ are being committed
SERVICES_CHANGED=$(echo "$STAGED_FILES" | grep "^Services/" || true)

if [ -z "$SERVICES_CHANGED" ]; then
    echo "‚úÖ No Services/ files modified. Skipping tests."
    exit 0
fi

echo -e "${YELLOW}üì¶ Services/ files modified. Running tests...${NC}"
echo "$SERVICES_CHANGED" | sed 's/^/  - /'
echo ""

# Run tests
echo "üß™ Running unit tests..."

# Use xcodebuild to run tests
if xcodebuild test \
    -project Meditationstimer.xcodeproj \
    -scheme "Lean Health Timer" \
    -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
    -quiet 2>&1 | grep -E "(Test Suite.*passed|failed|error)"; then

    echo -e "\n${GREEN}‚úÖ All tests passed! Proceeding with commit.${NC}"
    exit 0
else
    echo -e "\n${RED}‚ùå Tests failed! Commit blocked.${NC}"
    echo -e "${YELLOW}Fix the failing tests before committing.${NC}"
    echo ""
    echo "To see full test output, run:"
    echo "  xcodebuild test -project Meditationstimer.xcodeproj -scheme \"Lean Health Timer\" -destination 'platform=iOS Simulator,name=iPhone 16 Pro'"
    exit 1
fi
